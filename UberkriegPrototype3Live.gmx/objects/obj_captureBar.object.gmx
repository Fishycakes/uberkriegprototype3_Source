<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_captureBar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initiate
depth = UI_DEPTH_WIN
image_speed = 0;

//speed per bit
alarm_delay = 5; //5 of 60 fps
alarm[0] = alarm_delay;

//ammount to capture
cap_left = global.acting_unit.hp;
capping_unit = global.acting_unit;
//adjust for CO abilities
with( obj_CO_0 )
    {
    if( global.acting_unit.ownership = ownership)
        {
        if( D2D_AdvanceCapture ) other.cap_left = round(other.cap_left*1.5);
        if( SCOP_on and SCOP_PerfectCapture ) other.cap_left = 20
        }
    }


//reset cap if unit moved
if global.acting_unit_moved{
    capping_unit.capturing = 0;
    }


//points already captued
image_index = global.acting_unit.capturing;
//catprue is done variable
captureComplete = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update radio
scr_globalRadioCheck();
scr_update_radioBoarder();
scr_rangeCheck_reset();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cap step

//complete Capture Action action
if captureComplete {
    //reactivate UI
    scr_exe_control_restart();
    //destoy capBar
    instance_destroy();
    //clear active unit
    global.acting_unit = 0;
    }
//chek if cap is complete
else if(capping_unit.capturing = 20){
    capping_unit.capturing =0;
    image_index = 20 + global.P_Turn.number; 
    obj_map.terrains[global.posX, global.posY].ownership = global.P_Turn.number;
    obj_map.terrains[global.posX, global.posY].team = global.P_Turn.team;
    obj_map.terrains[global.posX, global.posY].image_index = global.P_Turn.number;
    captureComplete = true;
    scr_updateStanding_global();
    scr_updateGlobalVision();
    alarm[0] = 20;
    
    }
    
else if (cap_left = 0){
    //cap action complete not not done
    captureComplete = true;
    alarm[0] = 20;
    }
    
else{
    alarm[0] = alarm_delay;
    capping_unit.capturing +=1;
    cap_left -= 1;
    image_index = capping_unit.capturing;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw order
if global.acting_unit.isObservable{
draw_self();
draw_sprite(spr_capturebar_frame,global.P_Turn.number-1,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
