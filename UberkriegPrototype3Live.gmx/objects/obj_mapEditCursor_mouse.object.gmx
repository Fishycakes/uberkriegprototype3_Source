<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_basicCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///description

/*

This Cursor is used for the map editor, it will have the following functions:

- Place Terrain and unit in a map
- display xy co-ordinates and tile item selected 

*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
 
//Set up graphics
image_speed = 0;    //stop animation
depth = -100000;    //Depth to UI-Cursor level
cursorState = 1;    //initiate state variable for animation
alarm[0] = 2 ;      //initiate animation alarm for animation delay (variable framerate)

//create mouse press and release Variable

isLeftPressed = false ;

//Create Selection Variable ( unit or terrain to place )

global.selection = obj_terrain_Road;
global.selection_name = "Road";



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation controller

//Variable set up in create evemt

switch  (cursorState)    {
    case 1: image_index = 1;
            alarm[0] = 24;
            cursorState = 2;
            break;
            
    case 2: image_index = 2;
            alarm[0] = 4;
            cursorState = 3;
            break;
    
    case 3: image_index = 3;
            alarm[0] = 8;
            cursorState = 4;
            break;

    case 4: image_index = 2;
            alarm[0] = 2;
            cursorState = 5;
            break;
                
    case 5: image_index = 1;
            alarm[0] = 2;
            cursorState = 6;
            break;
            
    case 6: image_index = 0;
            alarm[0] = 2;
            cursorState = 1;
            break;
            
            
            
            
            
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snapping
x=(mouse_x div 24)*24;
y=(mouse_y div 24)*24;

// set pos variable  that translate x,y to corrasponding map adresses in arrays
//accounting for boarder

posX = (x) div 24 ;
posY = (y) div 24 ;





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// place terrain when mouse left button is pressed

if mouse_check_button_pressed(mb_left){
    isLeftPressed = true;
    }
    
if mouse_check_button_released(mb_left){
    isLeftPressed = false;
    }
    
if (isLeftPressed){
    if (posX &lt; 0 || posX &gt;= global.mapW || posY &lt; 0 || posY &gt;= global.mapH) {}
        //do nothing

    else{
        // destroy terrain
        with(obj_map.terrains[posX,posY])instance_destroy();
        //place new terrain
        obj_map.terrains[posX,posY] = instance_create( x ,y ,global.selection );
        } //do nothinh!
    
     }
     
     

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Left click to sample terrain

if mouse_check_button_pressed(mb_right){
    if (posX &gt;= 0 &amp;&amp; posY &gt;= 0)
        {
        global.selection = obj_map.terrains[posX,posY].object_index;
        global.selection_name = global.selection.name;
        }
    else{} // do nothong
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw X and Y positions

c_uiWhite = make_colour_rgb(250,250,250);

draw_set_font(ft_AuroraEx);
draw_set_colour(c_uiWhite);
draw_set_halign(fa_left);

posX_readout = "X=" + string(posX);
posY_readout = "Y=" + string(posY);



draw_text(0,0,global.selection_name);
draw_text(0,12,posX_readout);
draw_text(0,24,posY_readout);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change to ViewGrab
instance_create(x,y,obj_grabHand_mapEditor);

//deactivate self

instance_deactivate_object(self);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
