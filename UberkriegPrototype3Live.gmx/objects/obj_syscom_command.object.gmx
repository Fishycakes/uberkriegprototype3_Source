<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_syscom_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_syscom_menu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate
event_inherited();

//populate list "menu_content"

if global.capture      ds_list_add(menu_content,"capture");
if global.engage       ds_list_add(menu_content,"engage");
if global.join         ds_list_add(menu_content,"join");
if global.attach       ds_list_add(menu_content,"attach");
if global.supply       ds_list_add(menu_content,"supply");
if global.load         ds_list_add(menu_content,"load");
if global.drop_A       ds_list_add(menu_content,"drop_A");
if global.drop_B       ds_list_add(menu_content,"drop_B");
if global.infiltrate   ds_list_add(menu_content,"infiltrate");
if global.hide         ds_list_add(menu_content,"hide");
if global.appear       ds_list_add(menu_content,"appear");
if global.disrupt      ds_list_add(menu_content,"disrupt");
if global.wait         ds_list_add(menu_content,"wait");

row_max = ds_list_size(menu_content) - 1 ; 




/*

ds_list_add(menu_content,"engage");
ds_list_add(menu_content,"appear");
ds_list_add(menu_content,"capture");
ds_list_add(menu_content,"disrupt");
ds_list_add(menu_content,"drop");
ds_list_add(menu_content,"hide");
ds_list_add(menu_content,"infiltrate");
ds_list_add(menu_content,"join");
ds_list_add(menu_content,"load");
ds_list_add(menu_content,"supply");



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherite
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press "B"
if  (keyboard_check_pressed(global.keyCANCEL) and !global.drop_phaze_2){// donnot activate if in drop-phaze2
    //reactivate move cursor
    //scr_rangeCheck_reset();
    //scr_updateLocalMove(global.acting_unit);
    instance_activate_object(obj_moveCursor);
    
    //check for other move cursors and destroy them
    with(obj_moveCursor){
        if(x div 24 != global.posX or y div 24 != global.posY){
        instance_destroy();
        }
    }
    //redraw move range check tiles
   with(obj_checker_tile){ 
        if (move_cost != -1 and global.acting_unit.isCommander) sprite_index = spr_rangecheck_clear;
        else if (move_cost != -1 and isOnRadio) sprite_index = spr_rangecheck_clear;
        else if (move_cost != -1) sprite_index = spr_rangecheck_bluedk;
        }
    // destroy this menu
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set mini win targets if load
if global.acting_unit != 0{
    if global.acting_unit.name = "A.P.C."{
        if ds_list_find_value(menu_content,row) = "drop_A" global.unit_check = global.acting_unit.load_A;
        else if ds_list_find_value(menu_content,row) = "drop_B" global.unit_check = global.acting_unit.load_B;
    
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///troubleshoot
/*

draw_text(0,240, "global.move_order.size: " + string( ds_priority_size(global.move_order)));
draw_text(0,262, "acting unit : " + string(global.acting_unit.name));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
