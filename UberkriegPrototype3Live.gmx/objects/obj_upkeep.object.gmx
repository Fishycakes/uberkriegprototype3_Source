<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do Upkeep Stuff

//day change animation

//income added to funds

global.P_Turn.revenue = scr_calc_revenue(global.P_Turn.number)
global.P_Turn.funds += global.P_Turn.revenue;
//reset unit count
global.P_Turn.unit_count = 0;
//calc battle strenth
global.P_Turn.battle_strength = scr_calc_battleStrength(global.P_Turn);

scr_update_upkeep_stats("History",global.P_Turn);



//turn units on if standing
with obj_unit{ 
    if (ownership = global.P_Turn.number) global.P_Turn.unit_count += 1;
    if isStanding state = "idle";
    if isDisrupted state = "exhaust";
    if isDisrupted isDisrupted = false;
    if (isHidden and ownership = global.P_Turn.number) {fuel -= 5; show_debug_message("hidden fuel consum");}
    if ( obj_map.terrains[ x div 24, y div 24].isProperty ){
        if ( obj_map.terrains[ x div 24, y div 24].canRepair_g and obj_map.terrains[ x div 24, y div 24].ownership = global.P_Turn.number){
            if (hp=9){
                hp = 10
                global.P_Turn.funds -= cost div 10;
                }
            else if ( hp &lt; 9){
                hp +=2
                 global.P_Turn.funds -= (cost div 10)*2;
                }
            fuel = max_fuel;
            ammo = max_ammo;
            
            }
        }
    }



//activate HUD
instance_activate_object(obj_battleCursor);
instance_activate_object(obj_miniwin);

//change cursor position
with obj_battleCursor{
    x = global.P_Turn.save_cursor_pos_x;
    y = global.P_Turn.save_cursor_pos_y;
    }

//change phaze
global.Phaze = "Main"

//destroy self
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
