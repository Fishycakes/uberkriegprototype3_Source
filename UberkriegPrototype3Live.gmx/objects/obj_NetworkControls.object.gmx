<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///object description

/*
created if entered one of the server modes
independent presistant object that recieves save fires and changes turns
via contniue room!

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///packet listening (load new turn)
if(serverMode==0){
    var n_id = ds_map_find_value(async_load, "id");
        show_debug_message(string(cSocket));
    if n_id == cSocket
        {
        show_debug_message("Packet received");
        //load data here
         var t_buffer = ds_map_find_value(async_load, "buffer"); 
        var cmd_type = buffer_read(t_buffer, buffer_u16 );
        var bufferSize = buffer_read(t_buffer, buffer_u32);
       // var bufferData = buffer_read(t_buffer, buffer_string);
        //var inst = ds_map_find_value(socket_list, sock );
        var quick_save = "quicksave.ubq";
        show_debug_message(string(cmd_type));
         show_debug_message(string(buffer_get_size(t_buffer)));
        switch (cmd_type)
            {
            case 100:
                var srBuffer = buffer_create(1, buffer_grow, 1);
                //delete exsisting save
                if (file_exists(quick_save)) file_delete(quick_save);
                //create and open file
                show_debug_message("Count= " + string(bufferSize));
                //bufferSize=1;
                var sz;
               //for( i=0; i&lt;bufferSize; i++){
                sz = bufferSize;//buffer_read(t_buffer, buffer_u16)
                show_debug_message("Sz= " + string(sz));
                buffer_resize(srBuffer, sz);
                buffer_copy(t_buffer, 0, sz, srBuffer, 0)
                buffer_save(srBuffer, quick_save);
             //  }
                
                scr_quick_load(quick_save);
            break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start new turn
global.autoTurn = true;
room_goto(rm_continue);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
