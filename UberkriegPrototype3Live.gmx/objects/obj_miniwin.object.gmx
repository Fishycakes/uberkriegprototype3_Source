<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_miniwin_standard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate

//set depth
depth = UI_DEPTH_WIN;
//stop animation
image_speed = 0;
// position variable
isLeft = true ;

//window type
miniwin_type = "standard";
miniwin_terrain_ownership = 0;
miniwin_unit = spr_miniwin_LightTank;
miniwin_unit_ownership = 0;







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Location: Left or Right

//x =  view_xview[0] +  12;
//y =  view_yview[0] + 324;

if (view_xview - obj_battleCursor.x &gt; - 228 and view_yview - obj_battleCursor.y &lt; - 240 ){
    x =  view_xview[0] + 588;
    y =  view_yview[0] + 324;
    isLeft = false;
    }
    
else if (view_xview - obj_battleCursor.x &lt; - 456 and view_yview - obj_battleCursor.y &lt; - 240 ){
    x =  view_xview[0] + 12;
    y =  view_yview[0] + 324;
     isLeft = true;
    }

else if isLeft{
    x =  view_xview[0] + 12;
    y =  view_yview[0] + 324;
    }

else{
    x =  view_xview[0] + 588;
    y =  view_yview[0] + 324;
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Window Type change: standard, halfsize, load L or R


if ( obj_map.units[global.posX,global.posY] = 0){
    sprite_index = asset_get_index("spr_miniwin_halfsize");
    }
    
if ( obj_map.units[global.posX,global.posY] != 0){
    sprite_index = asset_get_index("spr_miniwin_standard");
    }
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Retrieve Intel from battle curosr

//retrive terrain object index
miniwin_terrain = asset_get_index("spr_miniwin_" + string_letters(obj_map.terrains[global.posX,global.posY].name));

// retrive terrain ownership if property
if  (object_is_ancestor(obj_map.terrains[global.posX,global.posY].object_index,obj_property)){ 
    miniwin_terrain_ownership = obj_map.terrains[global.posX,global.posY].ownership;
    }
    
// retrieve unit ingomation

if (obj_map.units[global.posX,global.posY] != 0){
    //get unit sprite index
    miniwin_unit = asset_get_index("spr_miniwin_" + string_letters(obj_map.units[global.posX,global.posY].name));
    //get unit ownership, and interpet image index
    miniwin_unit_ownership = obj_map.units[global.posX,global.posY].ownership - 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self();
//draw Terrain intel
draw_sprite(miniwin_terrain,miniwin_terrain_ownership,x,y);
//draw Unit intel
if (obj_map.units[global.posX,global.posY] != 0){
    draw_sprite(miniwin_unit,miniwin_unit_ownership,x,y);
    
    }


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
