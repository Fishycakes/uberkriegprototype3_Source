<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_DeplayWin_curosr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate

//stop animation
image_speed = 0;

depth = UI_DEPTH_WIN

//set alarm to Cursor move speed
alarm[1] = 1;

//navigationi math set up

start_x = view_xview+132;
start_y = view_yview+96;

//just created switch
just_created = true ;

col = 0; //1 of 2
row = 0; // 1 of 7

col_size = 240 ;
row_size = 36 ;

x = start_x;
y = start_y;

 

//variable needed to cancel deploy
no_deploy = false;
//inten display variable
display_on = false;

//math variables
display_cost = 0;
display_difference = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiate Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press "B"

if  (keyboard_check_pressed(global.keyCANCEL))
    {
    instance_activate_object(obj_battleCursor);
    instance_activate_object(obj_miniwin);
    instance_activate_object(obj_topwin);
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate Cursor via master controller

image_index = global.cursorFrameIndex ;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Keyboard Navigation



if (    keyboard_check_pressed(global.keyUP     ) ||
        keyboard_check_pressed(global.keyDOWN   ) ||
        keyboard_check_pressed(global.keyLEFT   ) ||
        keyboard_check_pressed(global.keyDOWN   ) )
        {
        global.cursorKey_delay = global.cursorKey_startspeed ;
        }
        
if (    keyboard_check_released(global.keyUP    ) ||
        keyboard_check_released(global.keyDOWN  ) ||
        keyboard_check_released(global.keyLEFT  ) ||
        keyboard_check_released(global.keyRIGHT ) )
        {
        alarm[1] = 0;
        global.cursorKey_delay = global.cursorKey_startspeed ;
        }
        
if (alarm[1] = -1 )
    {
    switch(keyboard_key)
        {
        case(vk_nokey):
            alarm[1] = 0;
            global.cursorkey_delay = global.cursorKey_startspeed ;
            break;
        
        case global.keyUP : //up
            if ( row =0) {
                row = 6; 
                y = start_y + (row*row_size);    
                }
            else {
                row -= 1;
                y = start_y + (row*row_size);
                }
            //juice then break
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        
        case global.keyDOWN : //down
            if ( row &lt; 6) {
                row += 1; //row +1
                y = start_y + (row*row_size);    
                }
            else {
                row = 0;
                y = start_y;
                }
            //juice then break
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;
        
        case global.keyLEFT : //left
            if (col == 0){
                col = 1; //change col
                x = start_x + col_size; //change location
                }
            else{
                col = 0;
                x = start_x; 
                }
            //juce then break
            scr_cursorKey_juice(1,global.cursorKey_sfx);
            break;  
                    
        case global.keyRIGHT : //right
                if (col == 0){
                    col = 1; //change col
                    x = start_x+ col_size; //change location
                    }
                else{
                    col = 0;
                    x = start_x; 
                    }
                //juce then break   
                scr_cursorKey_juice(1,global.cursorKey_sfx);
                break;  
        }
            
              
          
    

        }
        
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Nav

if (mouse_check_button_pressed(mb_left))
    {
    
        //check if cursor is inbound
        if (
                mouse_x &gt; start_x and mouse_x &lt; start_x + col_size*2
            and mouse_y &gt; start_y and mouse_y &lt; start_y + row_size*7
            
        )
        
            {
            
                //deploy if col and row match mouse pos
                if (  col = (mouse_x - start_x) div col_size and row = (mouse_y - start_y) div row_size )
                    
                    {
                        
                        unit_has_deployed = false;
                        no_deploy = false;
                            //check col
                            if col == 0{
                                //check row
                                switch row
                                    {
                                    case 0: //Light Infantry
                                    if (global.P_Turn.funds &gt;= 1000){
                                        global.P_Turn.funds -= 1000;
                                        scr_setUnit(obj_unit_LightInfantry,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                    break;
                                    
                                    case 1: //Heavy Infantry (mechanized Infnatry)
                                        if(global.P_Turn.funds &gt;= 2000){
                                        global.P_Turn.funds -= 2000;
                                        scr_setUnit(obj_unit_HeavyInfantry,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                    break;
                                    
                                    case 2: //Long Gun
                                    if (global.P_Turn.funds &gt;= 3000){
                                        global.P_Turn.funds -= 3000;
                                        scr_setUnit(obj_unit_LongGun ,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                    break;
                                    
                                    case 3: //Field Officer (commander)
                                    if (global.P_Turn.funds &gt;= 4000){
                                        global.P_Turn.funds -= 4000;
                                        scr_setUnit(obj_unit_Officer,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                    break; 
                                    
                                    case 4: //Recon
                                        if (global.P_Turn.funds &gt;= 4000){
                                        global.P_Turn.funds -= 4000;
                                        scr_setUnit(obj_unit_Recon,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                    break;
                                    
                                    case 5: //APC
                                    if (global.P_Turn.funds &gt;= 5000){
                                        global.P_Turn.funds -= 5000;
                                        scr_setUnit(obj_unit_APC,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                    break;
                                    
                                    case 6: //cancel
                                        no_deploy = true;
                                        break;
                                    }
                                }            
                            if col == 1{
                                //check row
                                   switch row
                                        {
                                   case 0: //Light Tank
                                   if  (global.P_Turn.funds &gt;= 6000){
                                        global.P_Turn.funds -= 6000; 
                                        scr_setUnit(obj_unit_LightTank,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }            
                                    break;
                                        
                                   case 1: //Artillery
                                    if (global.P_Turn.funds &gt;= 7000){
                                        global.P_Turn.funds -= 7000;
                                        scr_setUnit(obj_unit_Artillery,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                   break;
                                        
                                   case 2: //IFV (AA)
                                   if (global.P_Turn.funds &gt;= 6000){
                                       global.P_Turn.funds -= 6000;
                                       scr_setUnit(obj_unit_AA ,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                       unit_has_deployed = true;
                                       }
                                   break;
                                        
                                   case 3: //Covert Op.
                                   if (global.P_Turn.funds &gt;= 8000){
                                       global.P_Turn.funds -= 8000; 
                                       scr_setUnit(obj_unit_CovertOp,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                       unit_has_deployed = true;
                                       }
                                   break; 
                                        
                                   case 4: //Heavy Tank
                                   if (global.P_Turn.funds &gt;= 15000){
                                       global.P_Turn.funds -= 15000;
                                       scr_setUnit(obj_unit_HeavyTank,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                       unit_has_deployed = true;
                                       }
                                   break;
                                        
                                   case 5: //Rocket
                                   if (global.P_Turn.funds &gt;= 16000){
                                       global.P_Turn.funds -= 16000; 
                                       scr_setUnit(obj_unit_Rocket,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                       unit_has_deployed = true;
                                       }
                                   break;
                                        
                                   case 6: //Land Cruiser
                                    if (global.P_Turn.funds &gt;= 32000){
                                        global.P_Turn.funds -= 32000;
                                        scr_setUnit(obj_unit_LandCruiser,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                                        unit_has_deployed = true;
                                        }
                                   break;
                                    }        
                                }
                                if no_deploy {
                                        instance_activate_object(obj_battleCursor);
                                        
                                        //set menu exit delay to prevent unwanted view scrolling
                                        obj_battleCursor.alarm[3] = 10;
                                        obj_battleCursor.menuExitDelay = true;
                                        
                                        instance_activate_object(obj_miniwin);
                                        instance_activate_object(obj_topwin);
                                        with(obj_UI_deploy_mouse) instance_destroy();
                                        //second deplay menu is created for some reson when another base is selected first &amp; second base is select to deploy while cursor on first base is showing deploy icon...temp solution = nuke all deploy menus
                                        
                                        }
                            
                                if unit_has_deployed{
                        
                                     if obj_map.units[global.posX,global.posY] !=0{
                                        //set team
                                        obj_map.units[global.posX, global.posY].team = global.P_Turn.team;
                                        //update vision for depoyed unit
                                        scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
                                        //exshaust deployed unit
                                        obj_map.units[global.posX,global.posY].state = "exhaust" ;
                        
                                        //update standing
                                        scr_updateStanding_global();
                                        scr_updateLocalRadio(obj_map.units[global.posX,global.posY]);
                                        //update vision
                                        scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
                                        
                                        //Close deploy Window
                                        instance_activate_object(obj_battleCursor);
                                        
                                        
                                        //set menu exit delay to prevent unwanted view scrolling
                                        obj_battleCursor.alarm[3] = 10;
                                        obj_battleCursor.menuExitDelay = true;
                                        
                                        instance_activate_object(obj_miniwin);
                                        instance_activate_object(obj_topwin);
                                        instance_destroy();
                                        }
                                    }
                        
                    
                    }
                    
                else
                    {
                    
                               col = (mouse_x - start_x) div col_size;
                               x = start_x + col *col_size;
                               
                               row = (mouse_y - start_y) div row_size;
                               y = start_y + row *row_size;
        
                    
                    }
            
            }
        else
            {
            
            instance_activate_object(obj_battleCursor);
                    
            //set menu exit delay to prevent unwanted view scrolling
            obj_battleCursor.alarm[3] = 10;
            obj_battleCursor.menuExitDelay = true;
                        
            instance_activate_object(obj_miniwin);
            instance_activate_object(obj_topwin);
            instance_destroy();
            
            }
        
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse left button = exit menu

if (mouse_check_button_pressed(mb_right))
    {
    
        instance_activate_object(obj_battleCursor);
                    
        //set menu exit delay to prevent unwanted view scrolling
        obj_battleCursor.alarm[3] = 10;
        obj_battleCursor.menuExitDelay = true;
                    
        instance_activate_object(obj_miniwin);
        instance_activate_object(obj_topwin);
        instance_destroy();
             
    
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deploy Action

//check for key
if keyboard_check_pressed(global.keyCONFIRM){
unit_has_deployed = false;
no_deploy = false;
    //check col
    if col == 0{
        //check row
        switch row
            {
            case 0: //Light Infantry
            if (global.P_Turn.funds &gt;= 1000){
                global.P_Turn.funds -= 1000;
                scr_setUnit(obj_unit_LightInfantry,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
            break;
            
            case 1: //Heavy Infantry (mechanized Infnatry)
                if(global.P_Turn.funds &gt;= 2000){
                global.P_Turn.funds -= 2000;
                scr_setUnit(obj_unit_HeavyInfantry,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
            break;
            
            case 2: //Long Gun
            if (global.P_Turn.funds &gt;= 3000){
                global.P_Turn.funds -= 3000;
                scr_setUnit(obj_unit_LongGun ,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
            break;
            
            case 3: //Field Officer (commander)
            if (global.P_Turn.funds &gt;= 4000){
                global.P_Turn.funds -= 4000;
                scr_setUnit(obj_unit_Officer,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
            break; 
            
            case 4: //Recon
                if (global.P_Turn.funds &gt;= 4000){
                global.P_Turn.funds -= 4000;
                scr_setUnit(obj_unit_Recon,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
            break;
            
            case 5: //APC
            if (global.P_Turn.funds &gt;= 5000){
                global.P_Turn.funds -= 5000;
                scr_setUnit(obj_unit_APC,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
            break;
            
            case 6: //cancel
                no_deploy = true;
                break;
            }
        }            
    if col == 1{
        //check row
           switch row
                {
           case 0: //Light Tank
           if  (global.P_Turn.funds &gt;= 6000){
                global.P_Turn.funds -= 6000; 
                scr_setUnit(obj_unit_LightTank,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }            
            break;
                
           case 1: //Artillery
            if (global.P_Turn.funds &gt;= 7000){
                global.P_Turn.funds -= 7000;
                scr_setUnit(obj_unit_Artillery,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
           break;
                
           case 2: //IFV (AA)
           if (global.P_Turn.funds &gt;= 6000){
               global.P_Turn.funds -= 6000;
               scr_setUnit(obj_unit_AA ,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
               unit_has_deployed = true;
               }
           break;
                
           case 3: //Covert Op.
           if (global.P_Turn.funds &gt;= 8000){
               global.P_Turn.funds -= 8000; 
               scr_setUnit(obj_unit_CovertOp,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
               unit_has_deployed = true;
               }
           break; 
                
           case 4: //Heavy Tank
           if (global.P_Turn.funds &gt;= 15000){
               global.P_Turn.funds -= 15000;
               scr_setUnit(obj_unit_HeavyTank,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
               unit_has_deployed = true;
               }
           break;
                
           case 5: //Rocket
           if (global.P_Turn.funds &gt;= 16000){
               global.P_Turn.funds -= 16000; 
               scr_setUnit(obj_unit_Rocket,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
               unit_has_deployed = true;
               }
           break;
                
           case 6: //Land Cruiser
            if (global.P_Turn.funds &gt;= 32000){
                global.P_Turn.funds -= 32000;
                scr_setUnit(obj_unit_LandCruiser,global.posX,global.posY,obj_map.terrains[global.posX,global.posY].ownership);
                unit_has_deployed = true;
                }
           break;
            }        
        }
        if no_deploy {
                instance_activate_object(obj_battleCursor);
                instance_activate_object(obj_miniwin);
                instance_activate_object(obj_topwin);
                instance_destroy();
                }
    
        if unit_has_deployed{

             if obj_map.units[global.posX,global.posY] !=0{
                //set team
                obj_map.units[global.posX, global.posY].team = global.P_Turn.team;
                //update vision for depoyed unit
                scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
                //exshaust deployed unit
                obj_map.units[global.posX,global.posY].state = "exhaust" ;

                //update standing
                scr_updateStanding_global();
                scr_updateLocalRadio(obj_map.units[global.posX,global.posY]);
                //update vision
                scr_updateLocalVision(obj_map.units[global.posX,global.posY]);
                
                //Close deploy Window
                instance_activate_object(obj_battleCursor);
                instance_activate_object(obj_miniwin);
                instance_activate_object(obj_topwin);
                instance_destroy();
                }
            }
    }
        
         
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Temo, Display unit info

if keyboard_check_pressed(global.keyAUX){
    display_on = true;
    }
    
if keyboard_check_released(global.keyAUX){
    display_on = false;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cost nav
if col == 0{
        //check row
        switch row
            {
            case 0: //Light Infantry
                display_cost = 1000;
                break;
            
            case 1: //Heavy Infantry (mechanized Infnatry)
                display_cost = 2000;
                break;
            
            case 2: //Long Gun
                display_cost = 3000;
                break;
            
            case 3: //Field Officer (commander)
                display_cost = 4000;
                break; 
            
            case 4: //Recon
                display_cost = 4000;
                break;
            
            case 5: //APC
               display_cost = 5000;
                break;
            
            case 6: //cancel
                display_cost = 0;
                break;
            }
        }            
    if col == 1{
        //check row
           switch row
                {
           case 0: //Light Tank
                display_cost = 6000;             
                break;
                
           case 1: //Artillery
                display_cost = 7000;
                break;
                
           case 2: //IFV (AA)
               display_cost = 6000;
                break;
                
           case 3: //Covert Op.
                display_cost = 8000
                break; 
                
           case 4: //Heavy Tank
               display_cost = 15000;
            break;
                
           case 5: //Rocket
                display_cost = 16000;
                break;
                
           case 6: //Land Cruiser
                display_cost = 32000;
                break;
            }        
        }   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// number cruncher

//adjust for when full screan
display_set_gui_size(768, 432);

//funds
scr_draw_num(spr_num_light,false,global.P_Turn.funds,229,55,8);


//cost
scr_draw_num(spr_num_light,false,display_cost,409,55,8);

//draw difference

if global.P_Turn.funds-display_cost &lt; 0
scr_draw_num(spr_num_red,false,global.P_Turn.funds-display_cost,595,55,8);

else
scr_draw_num(spr_num_light,false,global.P_Turn.funds-display_cost,595,55,8);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///trouible shoot readout



//draw_text(0,0,string(alarm[1]) + " X: " + string(col) + "  Y: " + string(row));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw order

if just_created
    {
    
        start_x = view_xview+132;
        start_y = view_yview+96;
        
        x = start_x;
        y = start_y;
        
        just_created = false ;
    
    }

//Draw menu
draw_sprite(spr_DeployWin,global.P_Turn.number-1,view_xview + 132,view_yview + 42);


//draw overcost
if (global.P_Turn.funds &lt; 32000) //Land Cruiser
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),12,view_xview[0]+378,view_yview[0]+318);

if (global.P_Turn.funds &lt; 16000) //Rocket
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),11,view_xview[0]+378,view_yview[0]+282);

if (global.P_Turn.funds &lt; 15000) //Heavy Tank
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),10,view_xview[0]+378,view_yview[0]+246);

if (global.P_Turn.funds &lt; 8000) //Covert Op
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),9,view_xview[0]+378,view_yview[0]+210);

if (global.P_Turn.funds &lt; 6000) //IFV (AA)
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),8,view_xview[0]+378,view_yview[0]+174);

if (global.P_Turn.funds &lt; 7000) //Artillery
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),7,view_xview[0]+378,view_yview[0]+138);
 
if (global.P_Turn.funds &lt; 6000) //Light tank
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),6,view_xview[0]+378,view_yview[0]+102);

if (global.P_Turn.funds &lt; 5000) //APC
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),5,view_xview[0]+138,view_yview[0]+282);

if (global.P_Turn.funds &lt; 4000) //Recon
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),4,view_xview[0]+138,view_yview[0]+246);

if (global.P_Turn.funds &lt; 4000) //Officer
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),3,view_xview[0]+138,view_yview[0]+210);

if (global.P_Turn.funds &lt; 3000) //Long Gun
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),2,view_xview[0]+138,view_yview[0]+174);

if (global.P_Turn.funds &lt; 2000) //Heavy Infantry
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),1,view_xview[0]+138,view_yview[0]+138);

if (global.P_Turn.funds &lt; 1000) //Light Infantry
draw_sprite(asset_get_index("spr_overCost_P"+string(global.P_Turn.number)),0,view_xview[0]+138,view_yview[0]+102);

//draw cursor or "self"
draw_self();



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw mouse pointer
draw_sprite(spr_mousePointer, global.P_Turn.number-1, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Temo, Display unit info

if display_on{
    if col = 0{
        switch row{
            
            case 0: // Light infantry
            draw_sprite(spr_temp_unit_summary,1,view_xview+390,view_yview+110);
            break;
            
            case 1: // H infantry
            draw_sprite(spr_temp_unit_summary,2,view_xview+390,view_yview+110);
            break;
            
            case 2: // L gun infantry
            draw_sprite(spr_temp_unit_summary,3,view_xview+390,view_yview+110);
            break;
            
            case 3: // officer
            draw_sprite(spr_temp_unit_summary,4,view_xview+390,view_yview+110);
            break;
            
            case 4: // Recom
            draw_sprite(spr_temp_unit_summary,5,view_xview+390,view_yview+110);
            break;
            
            case 5: // APC
            draw_sprite(spr_temp_unit_summary,6,view_xview+390,view_yview+110);
            break;
            
            }
        if (display_cost != 0)    
        draw_sprite(spr_temp_summary_boarder,global.P_Turn.number-1,view_xview+390,view_yview+110);
        }
    else if col = 1 {
        switch row {
            case 0 : //light Tank
            draw_sprite(spr_temp_unit_summary,7,view_xview+150,view_yview+110);
            break;
            
            case 1 : //artillery
            draw_sprite(spr_temp_unit_summary,8,view_xview+150,view_yview+110);
            break;
            
            case 2 : //IFV
            draw_sprite(spr_temp_unit_summary,9,view_xview+150,view_yview+110);
            break;
            
            case 3 : //spy
            draw_sprite(spr_temp_unit_summary,10,view_xview+150,view_yview+110);
            break;
            
            case 4 : //heavy tank
            draw_sprite(spr_temp_unit_summary,11,view_xview+150,view_yview+110);
            break;
            
            case 5 : //rocket
            draw_sprite(spr_temp_unit_summary,12,view_xview+150,view_yview+110);
            break;
            
            case 6 : //l.Cruiser
            draw_sprite(spr_temp_unit_summary,13,view_xview+150,view_yview+110);
            break;
                
                }
        if (display_cost != 0)    
        draw_sprite(spr_temp_summary_boarder,global.P_Turn.number-1,view_xview+150,view_yview+110);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
